#!/usr/bin/env bash

## Created: March 3, 2024
## Updated: April 19, 2024
## Author(s): Todd Lenz, tlenz001@ucr.edu

## A wrapper script to perform differential gene expression (DGE) analysis.

function help {
    echo
    echo "usage : SimpleSeq.sh -r READ_COUNTS -m METADATA [-q QVALUE] [-h]"
    echo "---------------------------------------------------------------------"
    echo " Required inputs:"
    echo "  -r|--read_counts READ_COUNTS : Read counts file."
    echo "  -m|--metadata METADATA       : Metadata file."
    echo "  -c|--control CONTROL         : Control group."
    echo
    echo " Optional inputs:"
    echo "  -q|--qvalue QVALUE           : q-value cutoff."
    echo "  -h|--help HELP               : Show help message."
    echo "---------------------------------------------------------------------"
    echo
    exit 0;
}


#############################
## Define input arguments. ##
#############################
for arg in "$@"; do
    case "$arg" in
        "--read_counts") set -- "$@" "-r" ;;
        "--metadata") set -- "$@" "-m" ;;
        "--control") set -- "$@" "-c" ;;
        "--qvalue") set -- "$@" "-q" ;;
        "--help") set -- "$@" "-h" ;;
        *) set -- "$@" "$arg"
    esac
done

if [[ $# -eq 0 ]]; then
    help
    exit 1
fi

pipedir=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
SCRIPTS="$pipedir"/scripts

while getopts ":r:m:c:q:h:" opt; do
    case $opt in
        r) READ_COUNTS="$OPTARG";;
        m) METADATA="$OPTARG";;
        c) CONTROL="$OPTARG";;
        q) QVALUE="$OPTARG";;
        h) help;;
        *) echo "Error: '$OPTARG' is an invalid argument."
    esac
done


############################
## Check input arguments. ##
############################
if [[ -z "$READ_COUNTS" ]]; then
    echo "Error: Read_counts argument required."
    exit 1
elif [[ ! -e "$READ_COUNTS" ]]; then
    echo "Error: Read_counts file not found."
    exit 1
elif [[ -z "$METADATA" ]]; then
    echo "Error: Metadata argument required."
    exit 1
elif [[ ! -e "$METADATA" ]]; then
    echo "Error: Metadata file not found."
    exit 1
elif [[ -n "$QVALUE" && ! "$QVALUE" =~ ^-?[0-9]+(\.[0-9]+)?$ ]]; then
    echo "Error: Invalid value for qualue argument."
    exit 1
elif [[ -n "$QVALUE" && "$QVALUE" < 0 || "$QVALUE" > 1 ]]; then
    echo "Error: Invalid value for qualue argument."
    exit 1
fi


########################################################
## Define q-value cutoff for differential expression. ##
########################################################
if [[ -z $QVALUE ]]; then
    QVALUE=0.05
fi

#############################################################
## Check number of sample groups and replicates per group. ##
#############################################################
awk 'NR > 1 { counts[$2]++ } END {for (string in counts) {
    if (counts[string] < 2) {
        print "Error: " string " appears to have only 1 replicate."
        print "Two replicates per group are required to perform DGE analysis."
        exit 1
        }
    if (length(counts) < 2) {
        print "Error: There is only 1 group name found."
        print "Two unique groups are required to perform DGE analysis."
        exit 1
        }
    }
}' "$METADATA"

Rscript "$SCRIPTS"/differential_expression.R -r "$READ_COUNTS" -m "$METADATA" -c "$CONTROL" -g "$GENE_LIST" -q "$QVALUE"
